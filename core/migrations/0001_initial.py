# Generated by Django 3.2.2 on 2021-07-12 10:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_customer', models.BooleanField(default=False)),
                ('is_owner', models.BooleanField(default=False)),
                ('is_sponsor', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('phone_number', models.CharField(max_length=11)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FoodVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='')),
                ('bank_account_number', models.CharField(max_length=255)),
                ('manager', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='')),
                ('category', models.CharField(choices=[('BK', 'Bakery'), ('PA', 'Pastry'), ('GR', 'Grills'), ('SH', 'Sushi'), ('DR', 'Drinks'), ('OT', 'Others')], max_length=2)),
                ('description', models.TextField(default='', max_length=255)),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10, max_length=10)),
                ('is_served', models.BooleanField(default=False)),
                ('favorite_by', models.ManyToManyField(blank=True, to='core.Customer')),
                ('food_venues', models.ManyToManyField(to='core.FoodVenue')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=255)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=10, max_length=10)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
                ('food_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.foodvenue')),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('description', models.TextField(default='', max_length=255)),
                ('is_served', models.BooleanField(default=False)),
                ('favorite_by', models.ManyToManyField(blank=True, to='core.Customer')),
                ('food_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.foodvenue')),
                ('items', models.ManyToManyField(to='core.Item')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_donated', models.BooleanField(default=False)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, max_length=10)),
                ('order_time', models.DateTimeField(default=None)),
                ('order_type', models.TextField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
                ('food_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.foodvenue')),
                ('items', models.ManyToManyField(blank=True, to='core.Item')),
                ('packages', models.ManyToManyField(blank=True, to='core.Package')),
            ],
        ),
        migrations.CreateModel(
            name='available_package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, max_length=10)),
                ('availablity_time', models.IntegerField()),
                ('food_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.foodvenue')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.package')),
            ],
            options={
                'unique_together': {('food_venue', 'package')},
            },
        ),
        migrations.CreateModel(
            name='available_item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, max_length=10)),
                ('availablity_time', models.IntegerField()),
                ('food_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.foodvenue')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item')),
            ],
            options={
                'unique_together': {('food_venue', 'item')},
            },
        ),
    ]
